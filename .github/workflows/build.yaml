
name: build

on:
  push:
    branches:
      - 'main'

env:
  DOCKERHUB_USERNAME: lrobin2023

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Set outputs
        working-directory: ./main
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: branch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build apiserver and push
        uses: docker/build-push-action@v3
        with:
          # apiserver在main目录下
          context: main/apiserver
          push: true
          # tags: ${{ env.DOCKERHUB_USERNAME }}/apiserver:${{ steps.branch.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
          tags: ${{ env.DOCKERHUB_USERNAME }}/apiserver:${{ steps.vars.outputs.sha_short }}

  deployment-update:
    needs: [docker-build-push, ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: lrobin0627/dreamland-deployment
          path: deployment
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        working-directory: ./deployment
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Set git config
        working-directory: ./deployment
        run: |
          git config user.name lrobin0627
          git config user.email lipf160627@163.com

      - name: Update chart of Target Repository
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'chart/charts/apiserver/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ steps.vars.outputs.sha_short }}
          createPR: true
          targetBranch: main
          branch: main
          message: 'Update Image Version to ${{ steps.vars.outputs.sha_short }}'
          repository: lrobin0627/dreamland-deployment
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: deployment
          # valueFile: 'chart/values.yaml'
          # commitChange: true
          # branch: main
          # message: 'Update Image Version to ${{ steps.vars.outputs.sha_short }}'
          # title: 'Version Updates'
          # changes: |
          #   {
          #     "chart/charts/apiserver/values.yaml": {
          #       "image.tag": "${{ steps.vars.outputs.sha_short }}",
          #     }
          #   }